{"version":3,"sources":["Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","role","aria-label","length","substring","SLoader","Loader","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","type","height","weight","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","undefined","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f0f28c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\nexport default Section ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\n  width:100vw;\r\n  display:flex;\r\n  justify-content:center;\r\n\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Message = ({text,color}) => (\r\n  <Container>\r\n    <Text color={color}>\r\n      {text}\r\n    </Text>\r\n  </Container>\r\n); \r\n\r\nMessage.propTypes = {\r\n  text : PropTypes.string.isRequired,\r\n  color : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props=>props.bgUrl});\r\n  height:180px;\r\n  background-size:cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover{\r\n    ${Image}{\r\n      opacity:0.3;\r\n    }\r\n    ${Rating}{\r\n      opacity : 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n  color: white;\r\n`;\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\r\n  <Link to={isMovie? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgUrl = {imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : \"/noPosterSmall.png\"} />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">⭐</span>{\" \"}\r\n          {rating} / 10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>{title.length > 18 ? `${title.substring(0,18)}...` : title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n)\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl : PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst SLoader = styled(Loader)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 300px;\r\n`\r\n\r\nconst HomePresenter = ({nowPlaying, upcoming, popular, loading, error}) =>  \r\n  \r\n  loading ? \r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Chanflix </title>\r\n      </Helmet>\r\n      <SLoader \r\n        type=\"Heart\"\r\n        color=\"#bdc3c7\"\r\n        height={200}\r\n        weight={200}\r\n      />  \r\n    </>\r\n  :\r\n    <Container>\r\n        <Helmet>\r\n          <title>Movies | Chanflix </title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">{nowPlaying.map(movie => \r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          )}</Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">{upcoming.map(movie => \r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          )}</Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">{popular.map(movie => \r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.original_title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          )}</Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}/>}\r\n    </Container>\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\"\r\n\r\nconst api = axios.create({\r\n  baseURL:\"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key:\"db76504d96b015e103faa52fa3e90239\",\r\n    language:\"en-US\"\r\n  }\r\n})\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: ()=> api.get(\"movie/upcoming\"),\r\n  popular: ()=> api.get(\"movie/popular\"),\r\n  movieDetail: id => api.get(`movie/${id}`,{\r\n    params: {\r\n      append_to_response:\"videos\"\r\n    }\r\n  }),\r\n  search: term => \r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n  \r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail : id => api.get(`tv/${id}`,{\r\n    params: {\r\n      append_to_response:\"videos\"\r\n    }\r\n  }),\r\n  search: (term) => \r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n  \r\n}","import HomeContainer from \"./HomeContainer\"\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\"\r\nimport { moviesApi } from \"api\";\r\n\r\n\r\nexport default class extends React.Component{\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const {data:{results : nowPlaying}} = await moviesApi.nowPlaying();\r\n      const {data:{results : upcoming}} = await moviesApi.upcoming();\r\n      const {data:{results : popular}} = await moviesApi.popular();\r\n  \r\n      this.setState({nowPlaying,upcoming,popular});\r\n      \r\n    }catch{\r\n      this.setState({\r\n        error : \"can't find movies information.\"\r\n      })\r\n    }finally{\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n    console.log(this.state)\r\n    return (\r\n      <HomePresenter \r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}  \r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    )\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst SLoader = styled(Loader)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 300px;\r\n`\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) =>  \r\n  loading ? \r\n    <>\r\n      <Helmet>\r\n        <title>TV Shows | Chanflix </title>\r\n      </Helmet>\r\n      <SLoader \r\n        type=\"Heart\"\r\n        color=\"#bdc3c7\"\r\n        height={200}\r\n        weight={200}\r\n      />  \r\n    </>\r\n  : \r\n  (\r\n  <Container>\r\n    <Helmet>\r\n        <title>TV Shows | Chanflix </title>\r\n    </Helmet>\r\n    {topRated && topRated.length > 0 && (\r\n      <Section title=\"Top Rated Shows\">\r\n        {topRated.map(show => (\r\n          <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            imageUrl={show.poster_path}\r\n            title={show.original_name}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date.substring(0, 4)}\r\n          />\r\n        ))}\r\n      </Section> )}\r\n    {popular && popular.length > 0 && (\r\n    <Section title=\"Popular Shows\">\r\n      {popular.map(show => (\r\n        <Poster\r\n          key={show.id}\r\n          id={show.id}\r\n          imageUrl={show.poster_path}\r\n          title={show.original_name}\r\n          rating={show.vote_average}\r\n          year={show.first_air_date.substring(0, 4)}\r\n        />\r\n      ))}\r\n    </Section> )}\r\n    {airingToday && airingToday.length > 0 && (\r\n    <Section title=\"AiringToday\">\r\n      {airingToday.map(show => (\r\n        <Poster\r\n          key={show.id}\r\n          id={show.id}\r\n          imageUrl={show.poster_path}\r\n          title={show.original_name}\r\n          rating={show.vote_average}\r\n          year={show.first_air_date.substring(0, 4)}\r\n        />\r\n      ))}\r\n    </Section> )}\r\n    {error && <Message color=\"#e74c3c\" text={error}/>}\r\n  </Container>);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component{\r\n\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const {data: {results : topRated}} = await tvApi.topRated();\r\n      const {data: {results : popular}} = await tvApi.popular();\r\n      const {data: {results : airingToday}} = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated, popular, airingToday\r\n      })\r\n    }catch{\r\n      this.setState({error:\"Can't find TV information.\"})\r\n    }finally{\r\n      this.setState({loading:false})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {topRated, popular, airingToday, loading, error} = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    )\r\n  }\r\n\r\n}","  \r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\"\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SLoader = styled(Loader)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 300px;\r\n`\r\n\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Search | Chanflix </title>\r\n        </Helmet>\r\n        <SLoader \r\n          type=\"Heart\"\r\n          color=\"#bdc3c7\"\r\n          height={200}\r\n          weight={200}\r\n        /> \r\n      </> \r\n    ) : (\r\n      <>\r\n        <Helmet>\r\n          <title>Search | Chanflix </title>\r\n        </Helmet>\r\n        {error && <Message color=\"#e74c3c\" text={error}/>}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n        )}\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date !== undefined ? movie.release_date.substring(0, 4) : \"unknown\"}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date !== undefined ? show.first_air_date.substring(0, 4) : \"unknown\"}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n       \r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      \r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n\r\n      this.setState({ movieResults, tvResults});\r\n\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","\r\nimport React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n\ttext-align: center;\r\n\tborder-bottom : 5px solid ${props => props.current ? \"#e74c3c\" : \"transparent\"};\r\n\ttransition: border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location:{pathname}}) => (\r\n  <Header>\r\n\r\n    <List>\r\n      <Item current={pathname == \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname == \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname == \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"Components/Message\";\r\n\r\n\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position:relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position:absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width:100%;\r\n  height: 100%;\r\n  background-image : url(${props => props.bgImage});\r\n  background-position : center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index : 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display:flex;\r\n  width:100%;\r\n  position: relative;\r\n  z-index:1;\r\n  height:100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width:70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin:20px 0 ;\r\n`;\r\nconst Item = styled.span`\r\n  font-weight: bold;\r\n`;\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\nconst Overview = styled.p`\r\n  font-size: 15px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\n\r\nconst SLoader = styled(Loader)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 300px;\r\n`\r\n\r\nconst DetailPresenter = ({result,  loading, error}) =>  (\r\n  loading ?\r\n    <>\r\n    <Helmet>\r\n      <title>Loading | Chanflix </title>\r\n    </Helmet>\r\n    <SLoader \r\n          type=\"Heart\"\r\n          color=\"#bdc3c7\"\r\n          height={200}\r\n          weight={200}\r\n    /> \r\n    </>\r\n  :\r\n  error ?  <Message color=\"#e74c3c\" text={error}/>\r\n  :\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}>\r\n\r\n      </Backdrop>\r\n      <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : (\"/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>{result.original_title? result.original_title : result.original_name}</Title>\r\n            <ItemContainer>\r\n              <Item>{result.release_date ? result.release_date : result.first_air_date}</Item>\r\n              <Divider>●</Divider>\r\n              \r\n              <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}min</Item>\r\n              <Divider>●</Divider>\r\n\r\n              <Item>{result.genres && result.genres.map((genre,index) => (index === result.genres.length-1 ? genre.name : `${genre.name}  / `))}min</Item>\r\n              \r\n\r\n            </ItemContainer>\r\n            <Overview>\r\n              {result.overview}\r\n            </Overview>\r\n          </Data>\r\n        </Content>\r\n    </Container>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\"\r\nexport default DetailContainer;","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    const {location:{pathname}} = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true, // 로딩할 것이 없다\r\n      error: null,\r\n      isMovie : pathname.includes(\"/movie/\")\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\n  async componentDidMount(){\r\n    const {\r\n      match: {\r\n        params:{id}\r\n      },\r\n      history: {push},\r\n      \r\n    } = this.props; // 라우터가 라우트의 컴포넌트에게 사용자가 입력한 url 정보등을 props로 전달해준다.\r\n    \r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    \r\n    if(isNaN(parsedId)){\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try{\r\n      if(isMovie){\r\n        ({data : result} = await moviesApi.movieDetail(parsedId));\r\n      }else{\r\n        ({data: result} = await tvApi.showDetail(parsedId));\r\n      }\r\n      \r\n    }catch{\r\n      this.setState({error: \"Can't find  anything.\"});\r\n    }finally{\r\n      this.setState({loading : false, result});\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {result, loading, error} = this.state;\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    )\r\n  }\r\n\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n\r\nexport default () => (\r\n\t<Router>\r\n\t\t<>\r\n\t\t\t<Header/>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact component={Home}/>\r\n\t\t\t\t<Route path=\"/tv\" exact component={TV}/>\r\n\t\t\t\t<Route path=\"/search\"  component={Search}/>\r\n\t\t\t\t<Route path=\"/movie/:id\" component={Detail}/>\r\n\t\t\t\t<Route path=\"/tv/:id\" component={Detail}/>\r\n\t\t\t\t<Redirect from=\"*\" to=\"/\"/>\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t</Router>\r\n\t\r\n)","import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n  ${reset};\r\n  a{\r\n    text-decoration : none;\r\n    color:inherit;\r\n  }\r\n  *{\r\n    box-sizing:border-box;\r\n  }\r\n  body{\r\n    font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 12px;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:50px;\r\n  }\r\n\r\n`;\r\n\r\nexport default globalStyles;","import React, {Component} from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nclass App extends Component{\n  render(){\n    return (\n      <>\n        <Router/>\n        <GlobalStyles/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}